$date
	Sun Oct 12 17:30:08 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module gates_all_styles_tb $end
$var wire 1 ! y_tri_g $end
$var wire 1 " y_tri_d $end
$var wire 1 # y_tri_b $end
$var wire 1 $ y_or_g $end
$var wire 1 % y_or_d $end
$var wire 1 & y_or_b $end
$var wire 1 ' y_not_g $end
$var wire 1 ( y_not_d $end
$var wire 1 ) y_not_b $end
$var wire 1 * y_mux_g $end
$var wire 1 + y_mux_d $end
$var wire 1 , y_mux_b $end
$var wire 1 - y_and_g $end
$var wire 1 . y_and_d $end
$var wire 1 / y_and_b $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 en $end
$var reg 1 3 exp $end
$var reg 1 4 sel $end
$var integer 32 5 errors [31:0] $end
$var integer 32 6 i [31:0] $end
$var integer 32 7 j [31:0] $end
$scope module u_and_b $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var reg 1 / y $end
$upscope $end
$scope module u_and_d $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 . y $end
$upscope $end
$scope module u_and_g $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 - y $end
$upscope $end
$scope module u_mux_b $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 4 sel $end
$var reg 1 , y $end
$upscope $end
$scope module u_mux_d $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 4 sel $end
$var wire 1 + y $end
$upscope $end
$scope module u_mux_g $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 8 nsel $end
$var wire 1 4 sel $end
$var wire 1 * y $end
$var wire 1 9 ya $end
$var wire 1 : yb $end
$upscope $end
$scope module u_not_b $end
$var wire 1 0 a $end
$var reg 1 ) y $end
$upscope $end
$scope module u_not_d $end
$var wire 1 0 a $end
$var wire 1 ( y $end
$upscope $end
$scope module u_not_g $end
$var wire 1 0 a $end
$var wire 1 ' y $end
$upscope $end
$scope module u_or_b $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var reg 1 & y $end
$upscope $end
$scope module u_or_d $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 % y $end
$upscope $end
$scope module u_or_g $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 $ y $end
$upscope $end
$scope module u_tri_b $end
$var wire 1 0 a $end
$var wire 1 2 en $end
$var reg 1 # y $end
$upscope $end
$scope module u_tri_d $end
$var wire 1 0 a $end
$var wire 1 2 en $end
$var wire 1 " y $end
$upscope $end
$scope module u_tri_g $end
$var wire 1 0 a $end
$var wire 1 2 en $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0:
09
x8
bx 7
b0 6
b0 5
x4
x3
x2
01
00
0/
0.
0-
x,
0+
0*
1)
1(
1'
0&
0%
0$
z#
x"
x!
$end
#1000
x*
1&
x+
x:
1%
1$
11
b1 6
03
#2000
x9
0)
0(
0'
0:
x!
10
01
b10 6
#3000
1/
1.
1-
1+
x:
11
b11 6
#4000
0*
09
1)
1(
1'
0&
0/
0.
0-
0+
0:
0%
0$
x!
00
01
b0 6
13
#5000
x*
1&
x+
x:
1%
1$
11
b1 6
03
#6000
x9
0)
0(
0'
0:
x!
10
01
b10 6
13
#7000
1/
1.
1-
1+
x:
11
b11 6
#8000
0/
0.
0-
x+
09
1)
1(
1'
x!
00
b0 6
#9000
1/
1.
1-
1+
x9
0)
0(
0'
x!
10
b1 6
#10000
0*
09
1)
1(
1'
0&
0/
0.
0-
0%
0$
0,
0+
18
0:
x!
00
01
04
b0 7
b0 6
03
#11000
1&
1%
1$
11
b1 6
#12000
1*
1+
19
0)
0(
0'
1,
x!
10
01
b10 6
#13000
1/
1.
1-
11
b11 6
13
#14000
0*
09
1)
1(
1'
0&
0/
0.
0-
0%
0$
0,
0+
08
x!
00
01
14
b1 7
b0 6
#15000
1*
1&
1,
1+
1:
1%
1$
11
b1 6
03
#16000
0*
0)
0(
0'
0,
0+
0:
x!
10
01
b10 6
13
#17000
1*
1/
1.
1-
1,
1+
1:
11
b11 6
03
#18000
0/
0.
0-
1)
1(
1'
z"
00
z!
02
b0 7
b0 6
13
#19000
1/
1.
1-
0)
0(
0'
z!
10
b1 6
#20000
0/
0.
0-
1)
1(
1'
0#
0"
00
0!
12
b1 7
b0 6
#21000
1/
1.
1-
0)
0(
0'
1#
1"
1!
10
b1 6
03
#22000
b10 7
b10 6
13
